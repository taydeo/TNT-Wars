package com.rast.tntwars.systems;

import java.util.List;

import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.block.Block;

public class WorldEditor {

	// Fill a region with the given radius to a material (radius is the center block plus blocks extended from it so a 3x3x3 has a radius of 2)
	public static void fillRegion (Location location, int radius, Material material) {
		int mRad = radius-1;
		if (mRad < 0) mRad = 0;
		int diam = 1+mRad*2;
		
		location.add(-mRad, -mRad, -mRad);
		for (int i = 0; i < diam; i++) {
			for (int j = 0; j < diam; j++) {
				for (int k = 0; k < diam; k++) {
					Block block = location.getBlock();
					block.setType(material);
					location.add(1, 0, 0);
				}
				location.add(-diam, 1, 0);
			}
			location.add(0, -diam, 1);
		}
		
		location.add(mRad, mRad, -radius);
	}
	
	// Replace a region with the given radius from a list of materials to a material (radius is the center block plus blocks extended from it so a 3x3x3 has a radius of 2)
	public static void replaceRegionMultiple (Location location, int radius, List<Material> fromMaterial, Material toMaterial) {
		int mRad = radius-1;
		if (mRad < 0) mRad = 0;
		int diam = 1+mRad*2;
		
		location.add(-mRad, -mRad, -mRad);
		for (int i = 0; i < diam; i++) {
			for (int j = 0; j < diam; j++) {
				for (int k = 0; k < diam; k++) {
					Block block = location.getBlock();
					if (fromMaterial.contains(block.getType())) {
						block.setType(toMaterial);
					}
					location.add(1, 0, 0);
				}
				location.add(-diam, 1, 0);
			}
			location.add(0, -diam, 1);
		}
		
		location.add(mRad, mRad, -radius);
	}
	
	// Replace a region with the given radius from a material to another material (radius is the center block plus blocks extended from it so a 3x3x3 has a radius of 2)
	public static void replaceRegion (Location location, int radius, Material fromMaterial, Material toMaterial) {
		int mRad = radius-1;
		if (mRad < 0) mRad = 0;
		int diam = 1+mRad*2;
		
		location.add(-mRad, -mRad, -mRad);
		for (int i = 0; i < diam; i++) {
			for (int j = 0; j < diam; j++) {
				for (int k = 0; k < diam; k++) {
					Block block = location.getBlock();
					if (fromMaterial.equals(block.getType())) {
						block.setType(toMaterial);
					}
					location.add(1, 0, 0);
				}
				location.add(-diam, 1, 0);
			}
			location.add(0, -diam, 1);
		}
		
		location.add(mRad, mRad, -radius);
	}
	
	
}
